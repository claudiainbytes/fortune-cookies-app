{"version":3,"sources":["redux/reducers.js","components/App.js","lib/Api.js","reportWebVitals.js","index.js"],"names":["initialState","quotes","GET_QUOTES","Presentational","props","state","randomIndex","ask","bind","this","setState","Math","floor","random","fetchGetQuotes","answer","author","className","text","id","href","onClick","target","rel","color","background","animation","React","Component","App","connect","dispatch","fetch","BASEURL","then","response","json","catch","error","console","res","reslimited","map","a","sort","value","b","slice","type","payload","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.327366ea.chunk.js","sourcesContent":["import { apiGetQuotes } from '../lib/Api';\n\nconst initialState = { quotes: [] };\n\nconst GET_QUOTES = 'GET_QUOTES';\n\nconst getQuotes = (quotes) => ({ type: GET_QUOTES, payload: quotes });\n\nconst fetchGetQuotes = () => {\n  return (dispatch) => {\n      apiGetQuotes()\n          .then(res => {\n              let reslimited = res.map(a => ({ sort: Math.random(), value: a })).sort((a, b) => a.sort - b.sort).map(a => a.value);\n              dispatch(getQuotes(reslimited.slice(0, 100)));\n          })\n          .catch(res => {\n              console.log(res);\n          })\n  }\n};\n\n\n// Redux:\nconst quotesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_QUOTES:\n      return {\n        ...state,\n        quotes: action.payload \n      };  \n    default:\n      return state;\n  }\n};\n \nexport { quotesReducer, fetchGetQuotes };\n\n","import React from 'react';\nimport '../App.scss';\nimport { Dots }  from 'react-preloaders2';\nimport { connect } from 'react-redux';\nimport { fetchGetQuotes } from '../redux/reducers';\n\n// Change code below this line\nclass Presentational extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      randomIndex: 0\n    };\n    this.ask = this.ask.bind(this);\n  }\n  ask() {\n      this.setState({\n        randomIndex: Math.floor(Math.random() * 100)\n      });\n  }\n  componentDidMount() {\n    this.props.fetchGetQuotes();\n  }\n  render() {\n    const quotes = this.props.quotes;\n    let answer = {'text': \"texto\", 'author': \"none\"};\n    if(typeof quotes[this.state.randomIndex] !== 'undefined'){\n      answer = quotes[this.state.randomIndex];\n    }\n    answer.author = (answer.author !== null) ? answer.author : \"Unknown\"; \n    return (\n      <div> \n        <div className=\"center-center-container\">\n          <div className=\"center-center-child\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"column column-xs-100 column-xs-offset-0 column-md-50 column-md-offset-25\">\n                  <div className=\"align-xs-center py-25\">\n                    <h2 className=\"m-0\">The Fortune Cookie App</h2>\n                  </div> \n                </div>\n              </div>  \n              <div className=\"row\">\n                <div className=\"column column-xs-100 column-xs-offset-0 column-md-50 column-md-offset-25\">\n                  <div className=\"align-xs-left\">\n                      <blockquote className=\"m-0 quote\">\n                        <p className=\"m-0 text-center\">\"{ answer.text }\"</p>\n                        <footer className=\"mt-10 text-center text-lg-right\"><p>- <small>{ answer.author }</small></p></footer> \n                        <div className=\"m-0 align-xs-center align-lg-left\">\n                          <a id=\"tweet-quote\" className=\"button button-transparent icon icon-twitter button-icon\" href={'https://twitter.com/intent/tweet?text=\"' + answer.text + '\" - ' + answer.author + '&hashtags=FortuneCookie'}></a>             \n                        </div>  \n                      </blockquote> \n                  </div>   \n                </div>\n              </div>  \n              <div className=\"row\">\n                <div className=\"column column-xs-100 column-xs-offset-0 column-md-50 column-md-offset-25\">\n                  <div className=\"align-xs-center py-25\">\n                    <button className=\"button button-lg button-orange m-0 p-10\" onClick={this.ask}>Crack the cookie!</button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"column column-xs-100 column-xs-offset-0 column-md-50 column-md-offset-25\">\n                  <div className=\"align-xs-center py-5\">\n                    <p className=\"m-0 text-center credits\">by <a href=\"https://claudiainbytes.github.io/\" target=\"_blank\" rel=\"noreferrer\">@claudiainbytes</a></p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Dots color={'#f7f7f7'} background=\"linear-gradient(180deg, #cd92e6 0%, #c47ce2 100%)\" animation=\"fade\" />\n      </div> \n    );\n  }\n };\n \n// Change code above this line\n \nconst App = connect((state) => ({ quotes: state.quotes.quotes }),\n                      { fetchGetQuotes }\n                    )\n                    (Presentational);\n\nexport default App;","//variable url del servidor\nconst BASEURL = \"https://type.fit/api\";\n\nexport const apiGetQuotes = () => {\n    const url = BASEURL + \"/quotes\" ;\n    return fetch(url)\n        .then(response => response.json())\n        .catch(error => console.error(error))\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.scss';\nimport { combineReducers } from 'redux';\nimport { quotesReducer } from './redux/reducers';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({\n  quotes: quotesReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n \nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}